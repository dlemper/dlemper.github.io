(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{182:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"multiboot-linux-usb-stick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multiboot-linux-usb-stick"}},[s._v("#")]),s._v(" Multiboot Linux USB-Stick")]),s._v(" "),a("p",[s._v("First, if you want to do it yourself and brick anything using this guide, don't make me responsible: THIS COMES WITH ABSOLUTELY NO WARRANTY!")]),s._v(" "),a("p",[s._v("I tested this method with 2 different ubuntu versions and it works like a charm even on Mac Minis with EFI!")]),s._v(" "),a("p",[s._v("For this, you have to be root on the system. I've used Debian Wheezy and installed the following packages:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("aptitude")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" syslinux p7zip-full dosfstools\n")])])]),a("p",[s._v("I presume that your usb stick is already available in Linux.")]),s._v(" "),a("p",[s._v("So, check which device it is:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fdisk")]),s._v(" -l\n")])])]),a("p",[s._v("Then partition it (mine was /dev/sdb) using fdisk:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fdisk")]),s._v(" /dev/sdb\n")])])]),a("p",[s._v("I've then created a new empty dos partitiontable using 'o' command.\nCreate new partitions using 'n' command and be sure that they have a size of 800 MB to have enough space for everything.\nAfter creating the partitions you should change the type of each to FAT32 LBA (type c). You can change the type using 't' command, select the partition and then put in 'c' as the type.\nThe first partition should also have the boot flag enabled, which can be done using 'a' command.")]),s._v(" "),a("p",[s._v("After that format each partition with mkfs.vfat, like this (replace the X with the partition number):")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("mkfs.vfat /dev/sdbX\n")])])]),a("p",[s._v("Install syslinux into mbr of the USB drive:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dd")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("440")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("conv")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("notrunc "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/lib/syslinux/mbr.bin "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("of")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dev/sdb\n")])])]),a("p",[s._v("mount the first partition, the initial boot partition and put a syslinux config there:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" /dev/sdb1 /mnt\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /mnt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /usr/lib/syslinux/menu.c32 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("lt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("lt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("EOF "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("gt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("syslinux.cfg\nTIMEOUT "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("600")]),s._v("\nPROMPT "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nDEFAULT menu.c32\nMENU TITLE MultiBoot\nONTIMEOUT first\nLABEL first\nMENULABEL FirstOS\nCOM32 chain.c32\nAPPEND boot "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nLABEL second\nMENULABEL SecondOS\nCOM32 chain.c32\nAPPEND boot "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nEOF\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" ~\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("umount")]),s._v(" /mnt\n")])])]),a("p",[s._v("the fowolling has to be done for each iso/partition:")]),s._v(" "),a("p",[s._v("install syslinux into partition boot sectors:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("syslinux -i /dev/sdbX\n")])])]),a("p",[s._v("mount the partition and go there:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" /dev/sdb2 /mnt\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /mnt\n")])])]),a("p",[s._v("put the iso's content onto the mounted partition:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("7z x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path to iso"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("now convert isolinux to syslinux:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" isolinux syslinux\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" syslinux/isolinux.bin\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" syslinux/isolinux.cfg syslinux/syslinux.cfg\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /usr/lib/syslinux/vesamenu.c32 syslinux/\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /usr/lib/syslinux/menu.c32 syslinux/\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /usr/lib/syslinux/gfxboot.c32 syslinux/\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /usr/lib/syslinux/chain.c32 syslinux/\n")])])]),a("p",[s._v("unmount the partition and prepare the next one or reboot:")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("umount")]),s._v(" /mnt\n")])])]),a("p",[s._v("Thanks to:")]),s._v(" "),a("ul",[a("li",[s._v("People behind syslinux and it's wiki")]),s._v(" "),a("li",[s._v("A very good article which I used as base for my own attempts: http://comptb.cects.com/67-multi-boot-usb-with-syslinux-and-grub4dos")])])])}),[],!1,null,null,null);t.default=e.exports}}]);